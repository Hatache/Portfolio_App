# Generated by Django 5.1.7 on 2025-03-24 05:52

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

def create_categories_and_update_skills(apps, schema_editor):
    SkillCategory = apps.get_model('portfolio_mgnt', 'SkillCategory')
    Skill = apps.get_model('portfolio_mgnt', 'Skill')
    
    # First, create the categories
    categories = {}
    for category_name in ['Frontend', 'Backend', 'Other']:
        icon_class = {
            'Frontend': 'fas fa-code',
            'Backend': 'fas fa-server',
            'Other': 'fas fa-tools'
        }.get(category_name, 'fas fa-star')
        
        category = SkillCategory.objects.create(
            name=category_name,
            icon=icon_class,
            order=list(['Frontend', 'Backend', 'Other']).index(category_name)
        )
        categories[category_name] = category
    
    # Now update all skills to point to the appropriate category
    for skill in Skill.objects.all():
        old_category = skill.category
        if old_category in categories:
            skill.new_category = categories[old_category]
            skill.save()

def reverse_categories_and_skills(apps, schema_editor):
    SkillCategory = apps.get_model('portfolio_mgnt', 'SkillCategory')
    Skill = apps.get_model('portfolio_mgnt', 'Skill')
    
    # Convert back to string categories
    for skill in Skill.objects.all():
        if skill.new_category:
            skill.category = skill.new_category.name
            skill.save()
    
    # Delete all categories
    SkillCategory.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('portfolio_mgnt', '0014_aboutme'),
    ]

    operations = [
        # First, add the new category field without removing the old one
        migrations.AddField(
            model_name='skill',
            name='new_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='portfolio_mgnt.skillcategory'),
        ),
        
        # Add the order field to Skill
        migrations.AddField(
            model_name='skill',
            name='order',
            field=models.IntegerField(default=0, help_text='Order in which the skill should appear within its category'),
        ),
        
        # Update help text for SkillCategory.order
        migrations.AlterField(
            model_name='skillcategory',
            name='order',
            field=models.IntegerField(default=0, help_text='Order in which the category should appear'),
        ),
        
        # Update help text for Skill.proficiency
        migrations.AlterField(
            model_name='skill',
            name='proficiency',
            field=models.IntegerField(help_text='Proficiency level (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        
        # Run the data migration
        migrations.RunPython(create_categories_and_update_skills, reverse_categories_and_skills),
        
        # Remove the old category field
        migrations.RemoveField(
            model_name='skill',
            name='category',
        ),
        
        # Rename new_category to category
        migrations.RenameField(
            model_name='skill',
            old_name='new_category',
            new_name='category',
        ),
        
        # Update Meta options
        migrations.AlterModelOptions(
            name='skill',
            options={'ordering': ['category', 'order', 'name'], 'verbose_name': 'Skill', 'verbose_name_plural': 'Skills'},
        ),
    ]
